$ pyspark

--SparkStreaming
>>> from pyspark.streaming import StreamingContext
>>> ssc = StreamingContext(sc,2) #每2秒截斷串流一次,將其變成DStream
>>> logs = ssc.socketTextStream('cdh6',23456)
>>> userreqs = logs.map(lambda line: (line.split(' ')[2],1)).reduceByKey(lambda v1,v2: v1+v2)
>>> userreqs.pprint()
>>> ssc.start()  #已經開始接受localhost:23456的輸入
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
另一個視窗
$ nc -lk 9999
輸入字串

=========================================================================================================================
-------------------------------------------
Time: 2019-09-25 23:15:42
-------------------------------------------

-------------------------------------------
Time: 2019-09-25 23:15:44                     --即便沒有資料,也每2秒產生micro-batch進行操作1次
-------------------------------------------

-------------------------------------------
Time: 2019-09-25 23:15:46
-------------------------------------------

-------------------------------------------
Time: 2019-09-25 23:15:48
-------------------------------------------

-------------------------------------------
Time: 2019-09-25 23:15:50
-------------------------------------------

-------------------------------------------
Time: 2019-09-25 23:15:52
-------------------------------------------

-------------------------------------------
Time: 2019-09-25 23:15:54
-------------------------------------------

-------------------------------------------
Time: 2019-09-25 23:15:56
-------------------------------------------

>>> ssc.stop()

=========================================================================================================================
--Structured Streaming
[cloudera@cdh6 ~]$ cat wordcount_streaming.py
from pyspark.sql import SparkSession
from pyspark.sql.functions import explode
from pyspark.sql.functions import split
spark = SparkSession.builder.appName("StructuredNetworkWordCount").getOrCreate()
lines = spark.readStream.format("socket").option("host", "cdh6").option("port", 12345).load()
words = lines.select(explode(split(lines.value, " ")).alias("word"))
wordCounts = words.groupBy("word").count()
query = wordCounts.writeStream.outputMode("complete").format("console").start()
query.awaitTermination()


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
另一個視窗
$ nc -lk 23456
輸入字串

===========================================================================================================
-------------------------------------------
Batch: 0
-------------------------------------------
+----+-----+

|word|count|

+----+-----+
+----+-----+

-------------------------------------------
Batch: 1
-------------------------------------------
+--------------+-----+
|          word|count|
+--------------+-----+
|         band?|    1|
|          July|    1|
|  tawny-coats!|    1|
|        spoke;|    4|
|        siege.|    7|
|greatness-good|    1|
|      sceptres|    3|
|         pack,|    3|
|     GARDENER.|    6|
|     Clarence'|    6|
|    EUPHRONIUS|    2|
|       lanch'd|    1|
|      fiction.|    1|
|        fight,|   42|
|      jugglers|    1|
|         chien|    1|
|  Soul-killing|    1|
|        pluck,|    1|
|       goodly,|    1|
|      horrors-|    1|
+--------------+-----+
only showing top 20 rows
